{"ast":null,"code":"export function handleCardSelection(card) {\n  const emptyIndex = selectedCards.findIndex(selectedCard => selectedCard === null);\n  if (emptyIndex !== -1) {\n    const newSelectedCards = [...selectedCards];\n    newSelectedCards[emptyIndex] = card;\n    setSelectedCards(newSelectedCards);\n  }\n}\nexport function handleCardRemove(index) {\n  const newSelectedCards = [...selectedCards];\n  newSelectedCards[index] = null;\n  setSelectedCards(newSelectedCards);\n}","map":{"version":3,"names":["handleCardSelection","card","emptyIndex","selectedCards","findIndex","selectedCard","newSelectedCards","setSelectedCards","handleCardRemove","index"],"sources":["/Users/mareike/Projekte/hearthstone/src/lib/cardSelections.js"],"sourcesContent":["export function handleCardSelection(card) {\n  const emptyIndex = selectedCards.findIndex(\n    (selectedCard) => selectedCard === null\n  );\n\n  if (emptyIndex !== -1) {\n    const newSelectedCards = [...selectedCards];\n    newSelectedCards[emptyIndex] = card;\n    setSelectedCards(newSelectedCards);\n  }\n}\n\nexport function handleCardRemove(index) {\n  const newSelectedCards = [...selectedCards];\n  newSelectedCards[index] = null;\n  setSelectedCards(newSelectedCards);\n}\n"],"mappings":"AAAA,OAAO,SAASA,mBAAmBA,CAACC,IAAI,EAAE;EACxC,MAAMC,UAAU,GAAGC,aAAa,CAACC,SAAS,CACvCC,YAAY,IAAKA,YAAY,KAAK,IACrC,CAAC;EAED,IAAIH,UAAU,KAAK,CAAC,CAAC,EAAE;IACrB,MAAMI,gBAAgB,GAAG,CAAC,GAAGH,aAAa,CAAC;IAC3CG,gBAAgB,CAACJ,UAAU,CAAC,GAAGD,IAAI;IACnCM,gBAAgB,CAACD,gBAAgB,CAAC;EACpC;AACF;AAEA,OAAO,SAASE,gBAAgBA,CAACC,KAAK,EAAE;EACtC,MAAMH,gBAAgB,GAAG,CAAC,GAAGH,aAAa,CAAC;EAC3CG,gBAAgB,CAACG,KAAK,CAAC,GAAG,IAAI;EAC9BF,gBAAgB,CAACD,gBAAgB,CAAC;AACpC"},"metadata":{},"sourceType":"module","externalDependencies":[]}