{"ast":null,"code":"import CardDefinitions from \"../Components/CardDefinitions\";\nfunction fight(card1, card2) {\n  let myCard = {\n    ...card1\n  };\n  let attacker = {\n    ...card2\n  };\n  let result = null;\n  if (myCard.attack === 0 && attacker.attack === 0) {\n    return \"draw\";\n  }\n  while (myCard.health > 0 && attacker.health > 0) {\n    card1Health = card1Health - card2.attack;\n    card2Health = card2Health - card1.attack;\n  }\n  if (card1Health > 0) {\n    result = \"win\";\n  } else if (card2Health > 0) {\n    result = \"loose\";\n  } else {\n    result = \"draw\";\n  }\n  return result;\n}\nexport function fightAll(card) {\n  let results = CardDefinitions.map(opponent => {\n    return fight(card, opponent);\n  });\n  return {\n    win: results.filter(result => result === \"win\").length,\n    loose: results.filter(result => result === \"loose\").length,\n    draw: results.filter(result => result === \"draw\").length\n  };\n}","map":{"version":3,"names":["CardDefinitions","fight","card1","card2","myCard","attacker","result","attack","health","card1Health","card2Health","fightAll","card","results","map","opponent","win","filter","length","loose","draw"],"sources":["/Users/mareike/Projekte/hearthstone/src/lib/fight.js"],"sourcesContent":["import CardDefinitions from \"../Components/CardDefinitions\";\n\nfunction fight(card1, card2) {\n  let myCard = { ...card1 };\n  let attacker = { ...card2 };\n\n  let result = null;\n  if (myCard.attack === 0 && attacker.attack === 0) {\n    return \"draw\";\n  }\n  while (myCard.health > 0 && attacker.health > 0) {\n    card1Health = card1Health - card2.attack;\n    card2Health = card2Health - card1.attack;\n  }\n  if (card1Health > 0) {\n    result = \"win\";\n  } else if (card2Health > 0) {\n    result = \"loose\";\n  } else {\n    result = \"draw\";\n  }\n  return result;\n}\n\nexport function fightAll(card) {\n  let results = CardDefinitions.map((opponent) => {\n    return fight(card, opponent);\n  });\n  return {\n    win: results.filter((result) => result === \"win\").length,\n    loose: results.filter((result) => result === \"loose\").length,\n    draw: results.filter((result) => result === \"draw\").length,\n  };\n}\n"],"mappings":"AAAA,OAAOA,eAAe,MAAM,+BAA+B;AAE3D,SAASC,KAAKA,CAACC,KAAK,EAAEC,KAAK,EAAE;EAC3B,IAAIC,MAAM,GAAG;IAAE,GAAGF;EAAM,CAAC;EACzB,IAAIG,QAAQ,GAAG;IAAE,GAAGF;EAAM,CAAC;EAE3B,IAAIG,MAAM,GAAG,IAAI;EACjB,IAAIF,MAAM,CAACG,MAAM,KAAK,CAAC,IAAIF,QAAQ,CAACE,MAAM,KAAK,CAAC,EAAE;IAChD,OAAO,MAAM;EACf;EACA,OAAOH,MAAM,CAACI,MAAM,GAAG,CAAC,IAAIH,QAAQ,CAACG,MAAM,GAAG,CAAC,EAAE;IAC/CC,WAAW,GAAGA,WAAW,GAAGN,KAAK,CAACI,MAAM;IACxCG,WAAW,GAAGA,WAAW,GAAGR,KAAK,CAACK,MAAM;EAC1C;EACA,IAAIE,WAAW,GAAG,CAAC,EAAE;IACnBH,MAAM,GAAG,KAAK;EAChB,CAAC,MAAM,IAAII,WAAW,GAAG,CAAC,EAAE;IAC1BJ,MAAM,GAAG,OAAO;EAClB,CAAC,MAAM;IACLA,MAAM,GAAG,MAAM;EACjB;EACA,OAAOA,MAAM;AACf;AAEA,OAAO,SAASK,QAAQA,CAACC,IAAI,EAAE;EAC7B,IAAIC,OAAO,GAAGb,eAAe,CAACc,GAAG,CAAEC,QAAQ,IAAK;IAC9C,OAAOd,KAAK,CAACW,IAAI,EAAEG,QAAQ,CAAC;EAC9B,CAAC,CAAC;EACF,OAAO;IACLC,GAAG,EAAEH,OAAO,CAACI,MAAM,CAAEX,MAAM,IAAKA,MAAM,KAAK,KAAK,CAAC,CAACY,MAAM;IACxDC,KAAK,EAAEN,OAAO,CAACI,MAAM,CAAEX,MAAM,IAAKA,MAAM,KAAK,OAAO,CAAC,CAACY,MAAM;IAC5DE,IAAI,EAAEP,OAAO,CAACI,MAAM,CAAEX,MAAM,IAAKA,MAAM,KAAK,MAAM,CAAC,CAACY;EACtD,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}