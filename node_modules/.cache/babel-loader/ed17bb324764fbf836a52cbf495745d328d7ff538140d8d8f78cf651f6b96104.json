{"ast":null,"code":"import { useState } from \"react\";\nconst [selectedCards, setSelectedCards] = useState([null, null, null]);\nexport function handleCardSelection(card) {\n  const emptyIndex = selectedCards.findIndex(selectedCard => selectedCard === null);\n  if (emptyIndex !== -1) {\n    const newSelectedCards = [...selectedCards];\n    newSelectedCards[emptyIndex] = card;\n    setSelectedCards(newSelectedCards);\n  }\n}\nexport function handleCardRemove(index) {\n  const newSelectedCards = [...selectedCards];\n  newSelectedCards[index] = null;\n  setSelectedCards(newSelectedCards);\n}","map":{"version":3,"names":["useState","selectedCards","setSelectedCards","handleCardSelection","card","emptyIndex","findIndex","selectedCard","newSelectedCards","handleCardRemove","index"],"sources":["/Users/mareike/Projekte/hearthstone/src/lib/cardSelections.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst [selectedCards, setSelectedCards] = useState([null, null, null]);\n\nexport function handleCardSelection(card) {\n  const emptyIndex = selectedCards.findIndex(\n    (selectedCard) => selectedCard === null\n  );\n\n  if (emptyIndex !== -1) {\n    const newSelectedCards = [...selectedCards];\n    newSelectedCards[emptyIndex] = card;\n    setSelectedCards(newSelectedCards);\n  }\n}\n\nexport function handleCardRemove(index) {\n  const newSelectedCards = [...selectedCards];\n  newSelectedCards[index] = null;\n  setSelectedCards(newSelectedCards);\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGF,QAAQ,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAEtE,OAAO,SAASG,mBAAmBA,CAACC,IAAI,EAAE;EACxC,MAAMC,UAAU,GAAGJ,aAAa,CAACK,SAAS,CACvCC,YAAY,IAAKA,YAAY,KAAK,IACrC,CAAC;EAED,IAAIF,UAAU,KAAK,CAAC,CAAC,EAAE;IACrB,MAAMG,gBAAgB,GAAG,CAAC,GAAGP,aAAa,CAAC;IAC3CO,gBAAgB,CAACH,UAAU,CAAC,GAAGD,IAAI;IACnCF,gBAAgB,CAACM,gBAAgB,CAAC;EACpC;AACF;AAEA,OAAO,SAASC,gBAAgBA,CAACC,KAAK,EAAE;EACtC,MAAMF,gBAAgB,GAAG,CAAC,GAAGP,aAAa,CAAC;EAC3CO,gBAAgB,CAACE,KAAK,CAAC,GAAG,IAAI;EAC9BR,gBAAgB,CAACM,gBAAgB,CAAC;AACpC"},"metadata":{},"sourceType":"module","externalDependencies":[]}